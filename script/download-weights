#!/usr/bin/env python
import os
import sys

import torch
from transformers import CLIPImageProcessor
from diffusers import StableDiffusionXLPipeline, UNet2DConditionModel
from safetensors.torch import load_file
from huggingface_hub import hf_hub_download

# append project directory to path so predict.py can be imported
sys.path.append('.')

from predict import MODEL_CACHE, BASE_MODEL, UNET_CKPT, UNET_CACHE, REPO, FEATURE_EXTRACTOR

# Make cache folder
if not os.path.exists(MODEL_CACHE):
    os.makedirs(MODEL_CACHE)

if not os.path.exists(UNET_CACHE):
    os.makedirs(UNET_CACHE)

CLIPImageProcessor.from_pretrained(FEATURE_EXTRACTOR)

unet = UNet2DConditionModel.from_config(
    BASE_MODEL,
    subfolder="unet",
    cache_dir=UNET_CACHE
).to("cuda", torch.float16)
unet.load_state_dict(load_file(hf_hub_download(REPO, UNET_CKPT)))

pipe = StableDiffusionXLPipeline.from_pretrained(
    BASE_MODEL,
    cache_dir=MODEL_CACHE,
    torch_dtype=torch.float16,
    variant="fp16"     
)